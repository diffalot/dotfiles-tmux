# tmux plugin manager
#   - install <C-B> <C-I>
#   - update  <C-B> <C-U>
#
##  fix for missing terminfos  #################################################
#
# # test for italic output
#
# ## Levels of a working italicized terminal
#
# - `italics` should be printed in italics in your terminal when you enter
#     `echo -e "\e[3m italics \e[23m"` [1] or
#     `echo -e "\\x1b[3m italics \\x1b[23m"`
# - Programs like `htop` and `tig` should be running in full color, not black
#   and white
# - When you open vim you should see a nice colorscheme in 256 colors
#   todo: Find the command that prints out how many colors vim is using
# - You should be able to repeat all of those tests in `tmux`
# - Once all of those are verified, check if you have fonts inside `nvim` inside
#   `tmux`
#
# `tmux` is stealthy--start it up with a named session and you might find a #0
# session hiding out after you exit.  And don't believe that it's completely
# shut down after you `tmux kill-server`; I run a `killall tmux` right after
# that and let me know `killall` ever fails to report `No matching processes`;
# that just means `killall` is gonna be eating well tonight.
#
# if there's an old `tmux` server running from before you changed the configs,
# it's got you old settings on it, and you have no idea if what you put on disk
# is a good setup.
#
# ## How the different terminal emulators fare at different `TERM` settings
#
# Terminal Emulator Behaviour on macOS with TERM and Color Depth Overrides
#
# - TERM set in application's own preferences
#   - Establish a baseline and record what $TERM has been set to in each case
# - TERM set in tmux `terminal-overrides`
#   - Kill any remainig `tmux` processes and restart
#
# 3. `TRUECOLOR` set in `tmux.conf`
# 4. `terminal-overrides` set for color depth in tmux
# 5. color depth overridden in nvim `init.vim`
# 6. excape code overrides set in `init.vim`
#
# Legend of symbols and marks:
# - `tmux` overrides in `.tmux.conf`
#   - `envTC` - Set Truecolor environment with
#               `set-environment -g COLORTERM "truecolor"``
#   - `orTC`  - Force Truecolor on with
#               `set-option -a terminal-overrides ",*:Tc"`
#   - `orRGB` - Force RGB colors with
#               `set-option -a terminal-overrides ",*:RGB"`
#
#+-------------------------------------------------+---------+------+--------+------+----------+
#| Settings                                        | Display | open | foo in | open | italics  |
#|                                                 |         |      |        |      | in vim   |
#|                                                 | __foo__ | vim  | tmux   | htop | in tmux  |
#+-------------------------------------------------+---------+------+--------+------+----------+
#| Kitty TERM = none = `xterm-kitty`               |         |      |        |      |          |
#| tmux  TERM = none = `screen`                    | yes     | yes  | no     |      |          |
#| tmux  Overrides = envTC, orTC, orRGB            |         |      |        |      |          |
#| nvim  Overrides = not attempted                 |         |      |        |      |          |
#+-------------------------------------------------+---------+------+--------+------+----------+
#| Kitty TERM `xterm-256color` => `xterm-256color` |         |      |        |      | yes, but |
#| tmux  TERM `xterm-256color` => `xterm-256color` |         |      |        |      | Home and |
#| tmux  Overrides = envTC, orTC, orRGB            | yes     | yes  | yes    | yes  | End keys |
#| nvim  Overrides = none                          |         |      |        |      | stopped  |
#|                                                                                  | working  |
#| I thought I'd gotten very lucky with this one for a little while. I thinkthere   |          |
#| is something to using these wrong setting when the ones that have been provided  |          |
#| are at just as wrong.  If I can't get any of these other modes closer, I'll      |          |
#| Probably come back to this one for round three... If those keys are reporting    |          |
#| anything it's probably easier to just map them than all of this.
#
#| Another option suggested by this resule is compiling our own terminfo:
#| 
#+-------------------------------------------------+---------+------+--------+------+----------+
#| Kitty TERM = `xterm-kitty` = `xterm-kitty`      |         |      |        |      |          |
#| tmux  TERM = `tmux-256color` = `tmux-256color`  | yes     |      | vim    |no    |   no              |
#| tmux  Overrides = orRGB, envTC, orTC            |         |      |        | color  italics       |          |
#| nvim  Overrides = not attempted                 |         |      |        |      |          |
#+-------------------------------------------------+---------+------+--------+------+----------+
#| Kitty TERM = `xterm-kitty` = `xterm-kitty`      |         |      |        |      |          |
#| tmux  TERM = `tmux-256color` = `tmux-256color`  |         |      |        |      |                   |
#| tmux  Overrides = envTC, orTC, XXX       |         |      |        |                      |          |
#| nvim  Overrides = not attempted                 |         |      |        |      |          |
#+-------------------------------------------------+---------+------+--------+------+----------+
#|                                                 |         |      |        |      |          | 
#| Everyone talked about Truecolor a lot and RGB   |         |      |        |
#| very little so, I wanted to see if RGB mattered |                                              |
#+-------------------------------------------------+---------+------+--------+------+----------+
#| Kitty TERM = none = `xterm-kitty`               |         |      |        |      |          |
#| tmux  TERM = none = `screen`                    |         |      |        |      |          |
#| tmux  Overrides =                               |         |      |        |      |          |
#| nvim  Overrides = not attempted                 |         |      |        |      |          |
#|                                                 |         |      |        |      |          |
#+-------------------------------------------------+---------+------+--------+------+----------+
#| Kitty TERM = `screen-256color` = ``             |         |      |        |      |          |
#| tmux  TERM = none = ``                          |         |      |        |      |          |
#| tmux  Overrides = envTC,                        |         |      |        |      |          |
#| nvim  Overrides = not attempted                 |         |      |        |      |          |
#+-------------------------------------------------+---------+------+--------+------+----------+
#| Kitty TERM `xterm-256color`                     |         |      |        |      |          |
#| tmux  TERM `screen-256color`                    |         |      |        |      |          |
#| nvim  Overrides = [envTC, orRGB, orTC]          |         |      |        |      |          |
#+-------------------------------------------------+---------+------+--------+------+----------+
#| Kitty TERM `screen-256color`                    |         |      |        |      |          |
#| tmux  TERM       none                           |         |      |        |      |          |
#| nvim  Overrides  none                           |         |      |        |      |          |
#+-------------------------------------------------+---------+------+--------+------+----------+
#| Kitty TERM `tmux-256color`                      |         |      |        |      |          |
#| tmux  TERM       none                           |         |      |        |      |          |
#| nvim  Overrides  none                           |         |      |        |      |          |
#+-------------------------------------------------+---------+------+--------+------+----------+
#
#  if run as "tmux attach", create a session if one does not already exist  ###
#
# This `new-session` line makes sure we can either attach or create a session
# with `tmux new-session -A -s 'üåà‚õÖÔ∏è Reading\ Rainbow üìñ'` or the shorter,
# more pithy `tmux a -t0` if you're a default session fan

new-session -n $HOST


# Testing Configs (these just have to come after the new-session thing, we'll
# back to the real config soon)



set-environment -g COLORTERM "truecolor"
set -g default-terminal 'tmux-256color'
set-option -a terminal-overrides ",tmux-256color:RGB"
set-option -a terminal-overrides ",tmux-256color:Tc"
set-option -a terminal-overrides ",alacritty-direct:RGB"
set-option -a terminal-overrides ",alacritty-direct:Tc"

#set -ga terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[ q'

#set-environment -g COLORTERM "truecolor"
#set-option -a terminal-overrides ",*256col*:RGB"
#set-option -a terminal-overrides ",*256col*:Tc"
#set-option -a terminal-overrides ",*itt*:RGB"
#set-option -a terminal-overrides ",*itt*:Tc"
#set -g default-terminal 'screen-256color'
#set -g default-terminal 'xterm-256color'
# I have no idea where these two came from
#
#
#
# [1][https://stackoverflow.com/questions/3494435/vimrc-make-comments-italic]
#
#
# I'm gonna keep the following notes around even I've something working right
# in a terminal that I like.  I'm not counting on it staying like this forever.
#
#                                                                           --
#                                                                        Alice
#                                                                   2021-05-20
#
#  Notes from a Previous Rodeo  ###############################################
#
# despite all the blog posts and miscellaneous info I gleaned from the detrius
# of other people's computing configurations, I just don't know what to believe
# anymore.
#
# I don't know why it works this way. Everyone who said it shouldn't work this
# way acknowledged that it did. And they took action in their disbelief and
# compiled terminfo files, reverse engineering technology that has never
# existed, and we now have the closest thing to proof of the non existence of
# these strange devices: Not one of those blog posts was ever right in the end.
#
# All you have to do to get that weird little terminal app on your phone to
# connect to these strange containerized, networked boxes in full truecolor
# glory, is set everything to pretend to operate at 256 colors and claim to be
# a progream called screen. It's true, here's what I did once I had exhausted
# all other possibilities:
#
#     1. I set the terminal was typing into to `xterm-256color`
#
#     2. One I was on the server it claimed i was merely `xterm` so i set the
#        TERM environment variable to `xterm-256color` and my way to join the
#        tmux session.
#
#     3. Once inside the session I bumped myself up frome `screen` to
#        `screen-256color` to match what tmux hat been configured it was:
#        `screen-256color` and everything has been smooth since then.
#
#        (I guess i messed up the first part of this story... just set
#        everything to it's nearest relative 256color terminfo because they all
#        try to emulate each other so doggegly that they somehow succeed.
#
# And i dont think any of the hacks below here actually work. YMMV
# https://gist.github.com/bbqtd/a4ac060d6f6b9ea6fe3aabe735aa9d95
# https://rsapkf.xyz/blog/enabling-italics-vim-tmux
#
#                                                                           --
#                                                                        Alice
#                                                                   2021-05-12
#
#  And now, here is the config!  ##############################################
#
#  fix for neovim in tmux in st terminal  #####################################
#
# set -as terminal-overrides ',st*:Ss@'
#
#  default plugins  ###########################################################
#
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-pain-control'
set -g @plugin 'tmux-plugins/tmux-yank'
#
#  preferences  ###############################################################
#
set -g mouse on                # turn on mouse controls
set -g base-index 1            # start windows numbering at 1
set -g renumber-windows on     # renumber windows when a window is closed
set -g set-titles on           # set terminal title
set -g display-panes-time 800  # slightly longer pane indicators display time
set -g display-time 1000       # slightly longer status messages display time
set -g status-interval 10      # redraw status line every 10 seconds
set -g aggressive-resize       # allow windows attached to two or more clients
set -g pane-base-index 1       # make pane numbering consistent with windows
set -g automatic-rename on     # rename window to reflect current program
#                              # in the same session to have different sizes
#                              # limited by the smallest screen size of the
#                              # clients that are attached to the same window
#
# open new windows and panes with current path
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"
#
# this theme just changes the colors
set -g @plugin 'seebi/tmux-colors-solarized'
set -g @colors-solarized '256'
# set -g @colors-solarized 'dark'
# set -g @colors-solarized 'light'
# set -g @colors-solarized 'base16'
#
#  themes take over the entire appearance for you  ############################
#
# set -g @plugin "arcticicestudio/nord-tmux"
#
# but this one is very customizable
# set -g @plugin 'wfxr/tmux-power'
# set -g @tmux_power_theme 'violet'
# set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
# set -g @tmux_power_prefix_highlight_pos 'LR'
#
# set -g @plugin 'jimeh/tmux-themepack'
# set -g @themepack 'powerline/default/cyan'
# set -g @themepack 'powerline/double/green'
# set -g @themepack 'powerline/double/red'
#
#  Status Bar  ################################################################
#
# plugins for the status bar
set -g @plugin 'kristijanhusak/tmux-simple-git-status'
# set -g status-right "#{simple_git_status}"
set -g @plugin 'tmux-plugins/tmux-cpu'
# set -g status-right '#{cpu_bg_color} CPU: #{cpu_icon} #{cpu_percentage} | %a %h-%d %H:%M '
# set -g @plugin 'Alkindi42/tmux-bitwarden'
#
# the backround color of the right status is controlled by cpu temp
# the text colour is the default green to yellow to red as ram fills
set -g @cpu_low_bg_color "#[bg=default]" # background color when cpu is low
set -g @cpu_medium_bg_color "#[bg=bright,cyan]" # background color when cpu is medium
set -g @cpu_high_bg_color "#[bg=bright,magenta]" # background color when cpu is high
set -g @ram_low_fg_color "#[fg=bright,green]" # background color when cpu is low
set -g @ram_medium_fg_color "#[fg=yellow]" # background color when cpu is medium
set -g @ram_high_fg_color "#[fg=red]" # background color when cpu is high
# these are handy for testing color combinations
# set -g @cpu_medium_thresh "40" # medium percentage threshold
# set -g @cpu_high_thresh "70" # high percentage threshold
#
# customize only the right status
set -g status-right '#{ram_fg_color}#{cpu_bg_color} %Hh #{cpu_percentage} #{ram_percentage} #{simple_git_status}'
#
#  tmux plugin manager run config (must be last command)  #####################
#
run -b '~/.tmux/plugins/tpm/tpm'
#
###############################################################################
# todo(Alice): find a cross platform (Linux, macOS) (tmux, vim) shared
# clipboard system
